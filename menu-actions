#!/bin/bash
# Copyright (C) 2019 Omar Castro <omar.castro.360@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


XRANDR_OUTPUT=$(xrandr)
ACTIVE_OUTPUTS=( $( awk '/[0-9]+x[0-9]+\+[0-9]+\+[0-9]+/{ print $1 }' <<< "$XRANDR_OUTPUT" ) )
MONITORS=( $( awk '( $2 == "connected" ){ print $1 }'  <<< "$XRANDR_OUTPUT" ) )
ACTIVE_MONITORS=( $( awk '/[0-9]+x[0-9]+\+[0-9]+\+[0-9]+/ && ( $2 == "connected" ){ print $1 }' <<< "$XRANDR_OUTPUT" ) )

TITLES=()
declare -A COMMANDS=()


addCommand(){
    TITLES+=("$1")
    COMMANDS[$1]="$2"
}

#addCommand "Cancel" "true"

for entry in "${MONITORS[@]}"; do
    addCommand "Layout: Only $entry" "set_xrandr_only $entry"
done

##
# Dual screen options
##
for entry_a in "${MONITORS[@]}"; do
    for entry_b in "${MONITORS[@]}"; do
        if [ $entry_a != $entry_b ]; then
            addCommand "Layout: Dual Screen $entry_a ðŸ–µ ðŸ–µ $entry_b" "xrandr --output $entry_b --auto --output $entry_a --auto --left-of $entry_b"
        fi
    done
done


##
# Clone monitors
##
for entry_a in "${MONITORS[@]}"; do
    for entry_b in "${MONITORS[@]}"; do
        if [ $entry_a != $entry_b ]; then
            addCommand "Layout: Clone Screen $entry_a & $entry_b ðŸ–µ" "xrandr --output $entry_a --auto --output $entry_b --auto --same-as $entry_a"
        fi
    done
done


##
# Night mode
##
night_xrandr_gamma=${night_gamma:-1.1:0.8:0.7}
night_xrandr_brightness=${night_brightness:-0.7}
addCommand "Night mode: ON (Set to manual)" "deactivate_auto set_gamma_brightness $night_xrandr_gamma $night_xrandr_brightness"
addCommand "Night mode: OFF (Set to manual)" "deactivate_auto set_gamma_brightness 1:1:1 1.0"
addCommand "Night mode: toggle automatic/manual" "toggle_auto"


## if there is no command, just print and exit
if [[ -z "$1" ]]; then
    printf '%s\n' "${TITLES[@]}"
    exit
fi


############ HELPER COMMANDS

function set_xrandr_only()
{
    selected=$1
    xrandr --output $selected --auto
    cmd="xrandr"
    for entry in "${ACTIVE_OUTPUTS[@]}"
    do
        if [ $selected != $entry ]; then
            cmd="$cmd --output $entry --off"
        fi
    done
    $cmd
}


function set_gamma_brightness()
{
    cmd="xrandr "
    for entry in "${ACTIVE_MONITORS[@]}"; do
        cmd="$cmd --output $entry --gamma $1 --brightness $2"
    done
    echo $cmd
}

function deactivate_auto()
{
    sed -i 's/AUTO_NIGHT_MODE=.*$/AUTO_NIGHT_MODE=OFF/' "$( dirname "${BASH_SOURCE[0]}" )/state.conf"
    $@
}

function toggle_auto()
{
    STATUS="$(awk -F"=" '/AUTO_NIGHT_MODE/ {print $2; exit}' "$( dirname "${BASH_SOURCE[0]}" )"/state.conf)"
    case $STATUS in
        "OFF") newStatus="ON";;
        *) newStatus="OFF";;
    esac
    sed -i -e 's/AUTO_NIGHT_MODE=.*$/AUTO_NIGHT_MODE='"$newStatus"'/' "$( dirname "${BASH_SOURCE[0]}" )"/state.conf

}


$( ${COMMANDS[$1]} )
